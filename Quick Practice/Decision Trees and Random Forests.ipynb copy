{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Total points for this HW: 100.\n",
    "\n",
    "Please note: Copying and pasting other people's work is absolutely prohibited.  Any such cases will be reported to CUSP's education team and severely punished. Discussion is encouraged, and feel free to exchange ideas with your classmates, but please write your own code and do your own work."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "### Question 1: Accuracy and interpretability (10 pts)\n",
    "\n",
    "a) Describe a real-world prediction problem using urban data for which _interpretability_ of your models and results is essential, and for which it might be preferable to use decision trees rather than random forests.  Argue why this is the case. (3 pts)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Comparing with random forests, decision tree has better interpretability. For example, when investigate the population demographic attributes to a certain disease, it's better to know the specific split criteria, such as \"women(gender variable) older than 60(age variable) who live in east coast of U.S.(geographic variable) is tend to have this disease\".**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "b) Describe a real-world prediction problem using urban data for which _accuracy_ is paramount and interpretability may be less important, and for which it might be preferable to use random forests rather than decision trees.  Argue why this is the case. (3 pts)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Comparing with decision tree, random forest can provide higher accuracy. For example, if there are 40 variables to predict whether this real-estate is valuable to purchase, we are not too much care about which variable has which impact, but focus on whether the final decision is accurate (otherwise we will lose a lot of money).**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "c) Let's imagine that you want to try to get the best of both worlds (accuracy _and_ interpretability).  So you decide to start by learning a random forest classifier.  Describe at least one way of getting some interpretability out of the model by post-processing.  You could either pick a method from the literature (e.g., Domingos's work on combining multiple models or some method of computing variable importance), or come up with your own approach (doesn't have to be ground-breaking, but feel free to be creative!) (4 pts)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Random forest can provide more accurate prediction and also show the feature importance. Therefore, we can first use random forest to select top 10 features out, then use the marginal effect from multinomial logistic regression to interpret each variable. I have tried this method in my \"smoking behaviour analysis\" project before, it gets higher accurate results with interpretability than solely model.  **"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  Question 2: Build a decision tree for classification, step by step, following the lecture notes. Note that the dataset has been slightly modified, so you will get a different tree than the one shown in the lecture notes.  (30 points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn import tree\n",
    "from IPython.display import Image  \n",
    "import pydotplus\n",
    "\n",
    "try:\n",
    "    from StringIO import StringIO\n",
    "except ImportError:\n",
    "    from io import StringIO"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MPG</th>\n",
       "      <th>cylinders</th>\n",
       "      <th>HP</th>\n",
       "      <th>weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>good</td>\n",
       "      <td>4</td>\n",
       "      <td>75</td>\n",
       "      <td>light</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>bad</td>\n",
       "      <td>6</td>\n",
       "      <td>90</td>\n",
       "      <td>medium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>bad</td>\n",
       "      <td>4</td>\n",
       "      <td>110</td>\n",
       "      <td>medium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>bad</td>\n",
       "      <td>8</td>\n",
       "      <td>175</td>\n",
       "      <td>weighty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>bad</td>\n",
       "      <td>6</td>\n",
       "      <td>95</td>\n",
       "      <td>medium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>bad</td>\n",
       "      <td>4</td>\n",
       "      <td>94</td>\n",
       "      <td>light</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>bad</td>\n",
       "      <td>4</td>\n",
       "      <td>95</td>\n",
       "      <td>light</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>bad</td>\n",
       "      <td>8</td>\n",
       "      <td>139</td>\n",
       "      <td>weighty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>bad</td>\n",
       "      <td>8</td>\n",
       "      <td>190</td>\n",
       "      <td>weighty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>bad</td>\n",
       "      <td>8</td>\n",
       "      <td>145</td>\n",
       "      <td>weighty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>bad</td>\n",
       "      <td>6</td>\n",
       "      <td>100</td>\n",
       "      <td>medium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>good</td>\n",
       "      <td>4</td>\n",
       "      <td>92</td>\n",
       "      <td>medium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>bad</td>\n",
       "      <td>6</td>\n",
       "      <td>100</td>\n",
       "      <td>weighty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>bad</td>\n",
       "      <td>8</td>\n",
       "      <td>170</td>\n",
       "      <td>weighty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>good</td>\n",
       "      <td>4</td>\n",
       "      <td>89</td>\n",
       "      <td>medium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>good</td>\n",
       "      <td>4</td>\n",
       "      <td>65</td>\n",
       "      <td>light</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>bad</td>\n",
       "      <td>6</td>\n",
       "      <td>85</td>\n",
       "      <td>medium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>good</td>\n",
       "      <td>4</td>\n",
       "      <td>81</td>\n",
       "      <td>light</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>bad</td>\n",
       "      <td>6</td>\n",
       "      <td>95</td>\n",
       "      <td>medium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>bad</td>\n",
       "      <td>4</td>\n",
       "      <td>93</td>\n",
       "      <td>light</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     MPG  cylinders   HP   weight\n",
       "0   good          4   75    light\n",
       "1    bad          6   90   medium\n",
       "2    bad          4  110   medium\n",
       "3    bad          8  175  weighty\n",
       "4    bad          6   95   medium\n",
       "5    bad          4   94    light\n",
       "6    bad          4   95    light\n",
       "7    bad          8  139  weighty\n",
       "8    bad          8  190  weighty\n",
       "9    bad          8  145  weighty\n",
       "10   bad          6  100   medium\n",
       "11  good          4   92   medium\n",
       "12   bad          6  100  weighty\n",
       "13   bad          8  170  weighty\n",
       "14  good          4   89   medium\n",
       "15  good          4   65    light\n",
       "16   bad          6   85   medium\n",
       "17  good          4   81    light\n",
       "18   bad          6   95   medium\n",
       "19   bad          4   93    light"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "thefile = StringIO('MPG,cylinders,HP,weight\\ngood,4,75,light\\nbad,6,90,medium\\nbad,4,110,medium\\nbad,8,175,weighty\\nbad,6,95,medium\\nbad,4,94,light\\nbad,4,95,light\\nbad,8,139,weighty\\nbad,8,190,weighty\\nbad,8,145,weighty\\nbad,6,100,medium\\ngood,4,92,medium\\nbad,6,100,weighty\\nbad,8,170,weighty\\ngood,4,89,medium\\ngood,4,65,light\\nbad,6,85,medium\\ngood,4,81,light\\nbad,6,95,medium\\nbad,4,93,light')\n",
    "df = pd.read_csv(thefile)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "y = df.loc[:, 'MPG']\n",
    "X = df.loc[:, 'cylinders':'weight']\n",
    "X =pd.get_dummies(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "digraph Tree {\n",
      "node [shape=box, style=\"filled, rounded\", color=\"black\", fontname=helvetica] ;\n",
      "edge [fontname=helvetica] ;\n",
      "0 [label=\"cylinders <= 5.0, samples = 14, value = [10, 4], class = Good\", fillcolor=\"#e5813999\"] ;\n",
      "1 [label=\"HP <= 92.5, samples = 6, value = [2, 4], class = Bad\", fillcolor=\"#399de57f\"] ;\n",
      "0 -> 1 [labeldistance=2.5, labelangle=45, headlabel=\"True\"] ;\n",
      "2 [label=\"samples = 4, value = [0, 4], class = Bad\", fillcolor=\"#399de5ff\"] ;\n",
      "1 -> 2 ;\n",
      "3 [label=\"samples = 2, value = [2, 0], class = Good\", fillcolor=\"#e58139ff\"] ;\n",
      "1 -> 3 ;\n",
      "4 [label=\"samples = 8, value = [8, 0], class = Good\", fillcolor=\"#e58139ff\"] ;\n",
      "0 -> 4 [labeldistance=2.5, labelangle=-45, headlabel=\"False\"] ;\n",
      "}\n"
     ]
    }
   ],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=999)\n",
    "dt = DecisionTreeClassifier()\n",
    "dt.fit(X_train, y_train)\n",
    "\n",
    "print (tree.export_graphviz(dt,out_file=None,\n",
    "                         feature_names=X_train.columns.values,  \n",
    "                         class_names=['Good','Bad'],  \n",
    "                         filled=True, rounded=True,  \n",
    "                         special_characters=True,impurity=False).replace(\"<br/>\",\", \").replace(\"&le;\",\"<=\").replace(\"=<\",\"=\\\"\").replace(\">,\",\"\\\",\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "thestring = tree.export_graphviz(dt, out_file=None,  \n",
    "                         feature_names=X_train.columns.values, \n",
    "                         class_names=['Good','Bad'],  \n",
    "                         filled=True, rounded=True,  \n",
    "                         special_characters=True,impurity=False)\n",
    "\n",
    "graph = pydotplus.graph_from_dot_data(thestring)  \n",
    "Image(graph.create_png())  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Please use numpy and pandas to do the computation for parts a) through f).  Do not use an existing decision tree implementation like sklearn for this question."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "a) Start with the entire dataset and find the most common MPG value. (2 pts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "bad     15\n",
       "good     5\n",
       "Name: MPG, dtype: int64"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['MPG'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "subset = df[df['cylinders'] != 4]\n",
    "try: \n",
    "    goodN = subset['MPG'].value_counts()['good']\n",
    "except KeyError:\n",
    "    goodN = 0\n",
    "goodN"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** The most common MPG value is 'bad'**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "def InformationGain(goodY,badY,goodN,badN):\n",
    "    def F(X,Y):\n",
    "        val1 = X*np.log2(1.*(X+Y)/X) if X>0 else 0\n",
    "        val2 = Y*np.log2(1.*(X+Y)/Y) if Y>0 else 0\n",
    "        return val1+val2\n",
    "    return (F(goodY+goodN,badY+badN)-F(goodY,badY)-F(goodN,badN)) / (goodY+goodN+badY+badN)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "b) Enumerate all the possible binary questions you could ask for each discrete-valued variable.  For each such split, compute the numbers of \"good\" and \"bad\" MPG vehicles in each of the two child nodes, and compute the information gain using the provided function above. (5 pts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Split</th>\n",
       "      <th>Group Y</th>\n",
       "      <th>Group N</th>\n",
       "      <th>Gain</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Cylinders=4?</td>\n",
       "      <td>5+/4-</td>\n",
       "      <td>0+/11-</td>\n",
       "      <td>0.365294</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Cylinders=6?</td>\n",
       "      <td>0+/6-</td>\n",
       "      <td>5+/9-</td>\n",
       "      <td>0.153078</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Cylinders=8?</td>\n",
       "      <td>0+/5-</td>\n",
       "      <td>5+/10-</td>\n",
       "      <td>0.122556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Weight=light?</td>\n",
       "      <td>3+/3-</td>\n",
       "      <td>2+/12-</td>\n",
       "      <td>0.122556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Weight=medium?</td>\n",
       "      <td>2+/6-</td>\n",
       "      <td>3+/9-</td>\n",
       "      <td>0.122556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Weight=weighty?</td>\n",
       "      <td>0+/6-</td>\n",
       "      <td>5+/9-</td>\n",
       "      <td>0.122556</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Split Group Y Group N      Gain\n",
       "0     Cylinders=4?   5+/4-  0+/11-  0.365294\n",
       "1     Cylinders=6?   0+/6-   5+/9-  0.153078\n",
       "2     Cylinders=8?   0+/5-  5+/10-  0.122556\n",
       "3    Weight=light?   3+/3-  2+/12-  0.122556\n",
       "4   Weight=medium?   2+/6-   3+/9-  0.122556\n",
       "5  Weight=weighty?   0+/6-   5+/9-  0.122556"
      ]
     },
     "execution_count": 153,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cylinders_list = df['cylinders'].unique()\n",
    "weight_list = df['weight'].unique()\n",
    "\n",
    "def discreate(df, cylinders, weight):\n",
    "    def split(Y, N):\n",
    "        try: \n",
    "            goodY = Y['MPG'].value_counts()['good']\n",
    "        except KeyError:\n",
    "            goodY = 0\n",
    "        try: \n",
    "            badY = Y['MPG'].value_counts()['bad']\n",
    "        except KeyError:\n",
    "            badY = 0\n",
    "\n",
    "        try: \n",
    "            goodN = N['MPG'].value_counts()['good']\n",
    "        except KeyError:\n",
    "            goodN = 0 \n",
    "        try: \n",
    "            badN = N['MPG'].value_counts()['bad']\n",
    "        except KeyError:\n",
    "            badN = 0 \n",
    "        return goodY, badY, goodN, badN\n",
    "\n",
    "    def InformationGain(goodY,badY,goodN,badN):\n",
    "        def F(X,Y):\n",
    "            val1 = X*np.log2(1.*(X+Y)/X) if X>0 else 0\n",
    "            val2 = Y*np.log2(1.*(X+Y)/Y) if Y>0 else 0\n",
    "            return val1+val2\n",
    "        return (F(goodY+goodN,badY+badN)-F(goodY,badY)-F(goodN,badN)) / (goodY+goodN+badY+badN)          \n",
    "    \n",
    "    for i in cylinders:\n",
    "        cylindersY = df[df['cylinders'] == i]\n",
    "        cylindersN = df[df['cylinders'] != i]      \n",
    "        goodY, badY, goodN, badN = split(cylindersY, cylindersN)\n",
    "        gain = InformationGain(goodY, badY, goodN, badN)\n",
    "        yield('Cylinders=%i?'%i, '%s+/%s-'%(goodY, badY), '%s+/%s-'%(goodN, badN), '%f'%gain)\n",
    "    for j in weight:\n",
    "        weightY = df[df['weight'] == j]\n",
    "        weightN = df[df['weight'] != j]\n",
    "        goodY, badY, goodN, badN = split(weightY, weightN)\n",
    "        yield('Weight=%s?'%j, '%s+/%s-'%(goodY, badY), '%s+/%s-'%(goodN, badN), '%f'%gain)\n",
    "\n",
    "        \n",
    "discreate_split = pd.DataFrame(discreate(df, cylinders_list, weight_list)\n",
    "                               , columns=['Split', 'Group Y', 'Group N', 'Gain'])\n",
    "discreate_split"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "c) Enumerate all the possible binary questions you could ask for the real-valued variable HP.  For each such split, compute the numbers of \"good\" and \"bad\" MPG vehicles in each of the two child nodes, and compute the information gain using the provided function above. (5 pts) \n",
    "\n",
    "NOTE: if you'd like, you can just use all midpoints between consecutive values of the sorted HP attribute.  You are not required to exclude provably suboptimal questions like we did in the lecture."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Split</th>\n",
       "      <th>Group Y</th>\n",
       "      <th>Group N</th>\n",
       "      <th>Gain</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>HP&gt;65?</td>\n",
       "      <td>4+/15-</td>\n",
       "      <td>1+/0-</td>\n",
       "      <td>0.105915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>HP&gt;75?</td>\n",
       "      <td>3+/15-</td>\n",
       "      <td>2+/0-</td>\n",
       "      <td>0.226258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP&gt;81?</td>\n",
       "      <td>2+/15-</td>\n",
       "      <td>3+/0-</td>\n",
       "      <td>0.367103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>HP&gt;85?</td>\n",
       "      <td>2+/14-</td>\n",
       "      <td>3+/1-</td>\n",
       "      <td>0.214171</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>HP&gt;89?</td>\n",
       "      <td>1+/14-</td>\n",
       "      <td>4+/1-</td>\n",
       "      <td>0.365777</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>HP&gt;90?</td>\n",
       "      <td>1+/13-</td>\n",
       "      <td>4+/2-</td>\n",
       "      <td>0.275927</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>HP&gt;92?</td>\n",
       "      <td>0+/13-</td>\n",
       "      <td>5+/2-</td>\n",
       "      <td>0.509186</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>HP&gt;93?</td>\n",
       "      <td>0+/12-</td>\n",
       "      <td>5+/3-</td>\n",
       "      <td>0.429505</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>HP&gt;94?</td>\n",
       "      <td>0+/11-</td>\n",
       "      <td>5+/4-</td>\n",
       "      <td>0.365294</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>HP&gt;95?</td>\n",
       "      <td>0+/8-</td>\n",
       "      <td>5+/7-</td>\n",
       "      <td>0.223357</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>HP&gt;100?</td>\n",
       "      <td>0+/6-</td>\n",
       "      <td>5+/9-</td>\n",
       "      <td>0.153078</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>HP&gt;110?</td>\n",
       "      <td>0+/5-</td>\n",
       "      <td>5+/10-</td>\n",
       "      <td>0.122556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>HP&gt;139?</td>\n",
       "      <td>0+/4-</td>\n",
       "      <td>5+/11-</td>\n",
       "      <td>0.094448</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>HP&gt;145?</td>\n",
       "      <td>0+/3-</td>\n",
       "      <td>5+/12-</td>\n",
       "      <td>0.068394</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>HP&gt;170?</td>\n",
       "      <td>0+/2-</td>\n",
       "      <td>5+/13-</td>\n",
       "      <td>0.044113</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>HP&gt;175?</td>\n",
       "      <td>0+/1-</td>\n",
       "      <td>5+/14-</td>\n",
       "      <td>0.021377</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>HP&gt;190?</td>\n",
       "      <td>0+/0-</td>\n",
       "      <td>5+/15-</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Split Group Y Group N      Gain\n",
       "0    HP>65?  4+/15-   1+/0-  0.105915\n",
       "1    HP>75?  3+/15-   2+/0-  0.226258\n",
       "2    HP>81?  2+/15-   3+/0-  0.367103\n",
       "3    HP>85?  2+/14-   3+/1-  0.214171\n",
       "4    HP>89?  1+/14-   4+/1-  0.365777\n",
       "5    HP>90?  1+/13-   4+/2-  0.275927\n",
       "6    HP>92?  0+/13-   5+/2-  0.509186\n",
       "7    HP>93?  0+/12-   5+/3-  0.429505\n",
       "8    HP>94?  0+/11-   5+/4-  0.365294\n",
       "9    HP>95?   0+/8-   5+/7-  0.223357\n",
       "10  HP>100?   0+/6-   5+/9-  0.153078\n",
       "11  HP>110?   0+/5-  5+/10-  0.122556\n",
       "12  HP>139?   0+/4-  5+/11-  0.094448\n",
       "13  HP>145?   0+/3-  5+/12-  0.068394\n",
       "14  HP>170?   0+/2-  5+/13-  0.044113\n",
       "15  HP>175?   0+/1-  5+/14-  0.021377\n",
       "16  HP>190?   0+/0-  5+/15-  0.000000"
      ]
     },
     "execution_count": 145,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hp_list = sorted(df['HP'].unique())\n",
    "\n",
    "def real(df, hp): \n",
    "    def split(Y, N):\n",
    "        try: \n",
    "            goodY = Y['MPG'].value_counts()['good']\n",
    "        except KeyError:\n",
    "            goodY = 0\n",
    "        try: \n",
    "            badY = Y['MPG'].value_counts()['bad']\n",
    "        except KeyError:\n",
    "            badY = 0\n",
    "\n",
    "        try: \n",
    "            goodN = N['MPG'].value_counts()['good']\n",
    "        except KeyError:\n",
    "            goodN = 0 \n",
    "        try: \n",
    "            badN = N['MPG'].value_counts()['bad']\n",
    "        except KeyError:\n",
    "            badN = 0 \n",
    "        return goodY, badY, goodN, badN\n",
    "\n",
    "    def InformationGain(goodY,badY,goodN,badN):\n",
    "        def F(X,Y):\n",
    "            val1 = X*np.log2(1.*(X+Y)/X) if X>0 else 0\n",
    "            val2 = Y*np.log2(1.*(X+Y)/Y) if Y>0 else 0\n",
    "            return val1+val2\n",
    "        return (F(goodY+goodN,badY+badN)-F(goodY,badY)-F(goodN,badN)) / (goodY+goodN+badY+badN)         \n",
    "    \n",
    "    for i in hp:\n",
    "        hpY = df[df['HP'] > i]\n",
    "        hpN = df[df['HP'] <= i]      \n",
    "        goodY, badY, goodN, badN = split(hpY, hpN)\n",
    "        gain = InformationGain(goodY, badY, goodN, badN)\n",
    "        yield('HP>%i?'%i, '%s+/%s-'%(goodY, badY), '%s+/%s-'%(goodN, badN), '%f'%gain)\n",
    "    \n",
    "real_split = pd.DataFrame(real(df, hp_list), columns=['Split', 'Group Y', 'Group N', 'Gain'])\n",
    "real_split"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "d) Based on your results for parts b and c, what is the optimal binary split of the data?  Of the two child nodes created by this split, which (if any) would require further partitioning? (4 pts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Split</th>\n",
       "      <th>Group Y</th>\n",
       "      <th>Group N</th>\n",
       "      <th>Gain</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Cylinders=4?</td>\n",
       "      <td>5+/4-</td>\n",
       "      <td>0+/11-</td>\n",
       "      <td>0.365294</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Split Group Y Group N      Gain\n",
       "0  Cylinders=4?   5+/4-  0+/11-  0.365294"
      ]
     },
     "execution_count": 155,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "discreate_split[discreate_split['Gain'] == max(discreate_split['Gain'])]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Split</th>\n",
       "      <th>Group Y</th>\n",
       "      <th>Group N</th>\n",
       "      <th>Gain</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>HP&gt;92?</td>\n",
       "      <td>0+/13-</td>\n",
       "      <td>5+/2-</td>\n",
       "      <td>0.509186</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Split Group Y Group N      Gain\n",
       "6  HP>92?  0+/13-   5+/2-  0.509186"
      ]
     },
     "execution_count": 156,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "real_split[real_split['Gain'] == max(real_split['Gain'])]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Based on b and c, the optimal information gain from dicreate data is from whether Cylinders=4, and the optimal information gain from real data is from whether HP>92. Since the gain from HP split is larger than that from Cylinders, the optimal binary split of the data should be \"HP>92?\".**\n",
    "\n",
    "**Of the two child nodes created by this split, since Group Y has been perfectly classified (0 good and 13 bad), Group N needs further partitioning.**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "e) Repeat parts a through d until all training data points are perfectly classified by the resulting tree. (6 pts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MPG</th>\n",
       "      <th>cylinders</th>\n",
       "      <th>HP</th>\n",
       "      <th>weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>good</td>\n",
       "      <td>4</td>\n",
       "      <td>75</td>\n",
       "      <td>light</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>bad</td>\n",
       "      <td>6</td>\n",
       "      <td>90</td>\n",
       "      <td>medium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>good</td>\n",
       "      <td>4</td>\n",
       "      <td>92</td>\n",
       "      <td>medium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>good</td>\n",
       "      <td>4</td>\n",
       "      <td>89</td>\n",
       "      <td>medium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>good</td>\n",
       "      <td>4</td>\n",
       "      <td>65</td>\n",
       "      <td>light</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>bad</td>\n",
       "      <td>6</td>\n",
       "      <td>85</td>\n",
       "      <td>medium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>good</td>\n",
       "      <td>4</td>\n",
       "      <td>81</td>\n",
       "      <td>light</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     MPG  cylinders  HP  weight\n",
       "0   good          4  75   light\n",
       "1    bad          6  90  medium\n",
       "11  good          4  92  medium\n",
       "14  good          4  89  medium\n",
       "15  good          4  65   light\n",
       "16   bad          6  85  medium\n",
       "17  good          4  81   light"
      ]
     },
     "execution_count": 171,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1 = df[df['HP']<=92]\n",
    "df1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Split</th>\n",
       "      <th>Group Y</th>\n",
       "      <th>Group N</th>\n",
       "      <th>Gain</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Cylinders=4?</td>\n",
       "      <td>5+/0-</td>\n",
       "      <td>0+/2-</td>\n",
       "      <td>0.863121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Cylinders=6?</td>\n",
       "      <td>0+/2-</td>\n",
       "      <td>5+/0-</td>\n",
       "      <td>0.863121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Weight=light?</td>\n",
       "      <td>3+/0-</td>\n",
       "      <td>2+/2-</td>\n",
       "      <td>0.863121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Weight=medium?</td>\n",
       "      <td>2+/2-</td>\n",
       "      <td>3+/0-</td>\n",
       "      <td>0.863121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>HP&gt;65?</td>\n",
       "      <td>4+/2-</td>\n",
       "      <td>1+/0-</td>\n",
       "      <td>0.076010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>HP&gt;75?</td>\n",
       "      <td>3+/2-</td>\n",
       "      <td>2+/0-</td>\n",
       "      <td>0.169584</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>HP&gt;81?</td>\n",
       "      <td>2+/2-</td>\n",
       "      <td>3+/0-</td>\n",
       "      <td>0.291692</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>HP&gt;85?</td>\n",
       "      <td>2+/1-</td>\n",
       "      <td>3+/1-</td>\n",
       "      <td>0.005978</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>HP&gt;89?</td>\n",
       "      <td>1+/1-</td>\n",
       "      <td>4+/1-</td>\n",
       "      <td>0.061743</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>HP&gt;90?</td>\n",
       "      <td>1+/0-</td>\n",
       "      <td>4+/2-</td>\n",
       "      <td>0.076010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>HP&gt;92?</td>\n",
       "      <td>0+/0-</td>\n",
       "      <td>5+/2-</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Split Group Y Group N      Gain\n",
       "0     Cylinders=4?   5+/0-   0+/2-  0.863121\n",
       "1     Cylinders=6?   0+/2-   5+/0-  0.863121\n",
       "2    Weight=light?   3+/0-   2+/2-  0.863121\n",
       "3   Weight=medium?   2+/2-   3+/0-  0.863121\n",
       "4           HP>65?   4+/2-   1+/0-  0.076010\n",
       "5           HP>75?   3+/2-   2+/0-  0.169584\n",
       "6           HP>81?   2+/2-   3+/0-  0.291692\n",
       "7           HP>85?   2+/1-   3+/1-  0.005978\n",
       "8           HP>89?   1+/1-   4+/1-  0.061743\n",
       "9           HP>90?   1+/0-   4+/2-  0.076010\n",
       "10          HP>92?   0+/0-   5+/2-  0.000000"
      ]
     },
     "execution_count": 172,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1 = df[df['HP']<=92]\n",
    "cylinders_list1 = df1['cylinders'].unique()\n",
    "weight_list1 = df1['weight'].unique()\n",
    "hp_list1 = sorted(df1['HP'].unique())\n",
    "\n",
    "def value(df, cylinders, weight, hp): \n",
    "    def split(Y, N):\n",
    "        try: \n",
    "            goodY = Y['MPG'].value_counts()['good']\n",
    "        except KeyError:\n",
    "            goodY = 0\n",
    "        try: \n",
    "            badY = Y['MPG'].value_counts()['bad']\n",
    "        except KeyError:\n",
    "            badY = 0\n",
    "\n",
    "        try: \n",
    "            goodN = N['MPG'].value_counts()['good']\n",
    "        except KeyError:\n",
    "            goodN = 0 \n",
    "        try: \n",
    "            badN = N['MPG'].value_counts()['bad']\n",
    "        except KeyError:\n",
    "            badN = 0 \n",
    "        return goodY, badY, goodN, badN\n",
    "\n",
    "    def InformationGain(goodY,badY,goodN,badN):\n",
    "        def F(X,Y):\n",
    "            val1 = X*np.log2(1.*(X+Y)/X) if X>0 else 0\n",
    "            val2 = Y*np.log2(1.*(X+Y)/Y) if Y>0 else 0\n",
    "            return val1+val2\n",
    "        return (F(goodY+goodN,badY+badN)-F(goodY,badY)-F(goodN,badN)) / (goodY+goodN+badY+badN)         \n",
    "    \n",
    "    for i in cylinders:\n",
    "        cylindersY = df[df['cylinders'] == i]\n",
    "        cylindersN = df[df['cylinders'] != i]      \n",
    "        goodY, badY, goodN, badN = split(cylindersY, cylindersN)\n",
    "        gain = InformationGain(goodY, badY, goodN, badN)\n",
    "        yield('Cylinders=%i?'%i, '%s+/%s-'%(goodY, badY), '%s+/%s-'%(goodN, badN), '%f'%gain)\n",
    "    \n",
    "    for i in weight:\n",
    "        weightY = df[df['weight'] == i]\n",
    "        weightN = df[df['weight'] != i]\n",
    "        goodY, badY, goodN, badN = split(weightY, weightN)\n",
    "        yield('Weight=%s?'%i, '%s+/%s-'%(goodY, badY), '%s+/%s-'%(goodN, badN), '%f'%gain)\n",
    "\n",
    "    for i in hp:\n",
    "        hpY = df[df['HP'] > i]\n",
    "        hpN = df[df['HP'] <= i]      \n",
    "        goodY, badY, goodN, badN = split(hpY, hpN)\n",
    "        gain = InformationGain(goodY, badY, goodN, badN)\n",
    "        yield('HP>%i?'%i, '%s+/%s-'%(goodY, badY), '%s+/%s-'%(goodN, badN), '%f'%gain)\n",
    "    \n",
    "Split2 = pd.DataFrame(value(df1, cylinders_list1, weight_list1, hp_list1)\n",
    "                      , columns=['Split', 'Group Y', 'Group N', 'Gain'])\n",
    "Split2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Split</th>\n",
       "      <th>Group Y</th>\n",
       "      <th>Group N</th>\n",
       "      <th>Gain</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Cylinders=4?</td>\n",
       "      <td>5+/0-</td>\n",
       "      <td>0+/2-</td>\n",
       "      <td>0.863121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Cylinders=6?</td>\n",
       "      <td>0+/2-</td>\n",
       "      <td>5+/0-</td>\n",
       "      <td>0.863121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Weight=light?</td>\n",
       "      <td>3+/0-</td>\n",
       "      <td>2+/2-</td>\n",
       "      <td>0.863121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Weight=medium?</td>\n",
       "      <td>2+/2-</td>\n",
       "      <td>3+/0-</td>\n",
       "      <td>0.863121</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Split Group Y Group N      Gain\n",
       "0    Cylinders=4?   5+/0-   0+/2-  0.863121\n",
       "1    Cylinders=6?   0+/2-   5+/0-  0.863121\n",
       "2   Weight=light?   3+/0-   2+/2-  0.863121\n",
       "3  Weight=medium?   2+/2-   3+/0-  0.863121"
      ]
     },
     "execution_count": 173,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Split2[Split2['Gain'] == max(Split2['Gain'])]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**The next split provides 4 optimal outcomes with same information gain. Cylinders split provides perfect classification for both group Y and N, while Weight split needs further split. Since shorter tree is better, we choose Cylinders split.**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "f) Draw or show the final decision tree in a format of your choice.  The decision to make at each step and the predicted value at each leaf node must be clear. (4 pts)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**The final tree can be:**\n",
    "\n",
    "**(1) whether \"HP>92\"? If yes, resulting as \"Bad\"; If no, whether \"Cylinders=4\"? If yes, resulting as \"Good\", if no, resulting as \"Bad\".**\n",
    "\n",
    "**OR**\n",
    "\n",
    "**(2) whether \"HP>92\"? If yes, resulting as \"Bad\"; If no, whether \"Cylinders=6\"? If yes, resulting as \"Bad\", if no, resulting as \"Good\".**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "g) Classify each of the following four vehicles as having \"good\" or \"bad\" fuel efficiency (miles per gallon).  Do this by hand using the tree structure learned in part f. (4 pts)\n",
    "\n",
    "?,8,70,light --> **Bad**\n",
    "\n",
    "?,6,113,medium --> **Bad**\n",
    "\n",
    "?,4,83,weighty --> **Good**\n",
    "\n",
    "?,4,95,weighty --> **Bad**\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 3, Predicting burden of disease （40 pts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>FrxnPeaceIn10</th>\n",
       "      <th>ODA4H2OPcptaDol</th>\n",
       "      <th>RenewResm3PcptaYr</th>\n",
       "      <th>SustAccImprWatRur</th>\n",
       "      <th>SustAccImprWatUrb</th>\n",
       "      <th>SustAccImprSanRur</th>\n",
       "      <th>SustAccImprSanUrb</th>\n",
       "      <th>TotHlthExpPctofGDP</th>\n",
       "      <th>GenGovtPctofTotHlthExp</th>\n",
       "      <th>ExtResHlthPctTotExpHlth</th>\n",
       "      <th>PCptaGovtExpHlthAvgExcRt</th>\n",
       "      <th>GDPPCptaIntDol</th>\n",
       "      <th>AdultLtrcyRate</th>\n",
       "      <th>FemaleLtrcyRate</th>\n",
       "      <th>BurdenOfDisease</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.16</td>\n",
       "      <td>2986</td>\n",
       "      <td>0.10891</td>\n",
       "      <td>0.18812</td>\n",
       "      <td>0.049505</td>\n",
       "      <td>0.15842</td>\n",
       "      <td>0.065</td>\n",
       "      <td>0.395</td>\n",
       "      <td>0.4560</td>\n",
       "      <td>4</td>\n",
       "      <td>430</td>\n",
       "      <td>0.35644</td>\n",
       "      <td>0.20792</td>\n",
       "      <td>awful</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.58</td>\n",
       "      <td>13306</td>\n",
       "      <td>0.94059</td>\n",
       "      <td>0.98020</td>\n",
       "      <td>0.801980</td>\n",
       "      <td>0.98020</td>\n",
       "      <td>0.065</td>\n",
       "      <td>0.417</td>\n",
       "      <td>0.0340</td>\n",
       "      <td>49</td>\n",
       "      <td>6158</td>\n",
       "      <td>0.85644</td>\n",
       "      <td>0.78713</td>\n",
       "      <td>low</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.33</td>\n",
       "      <td>473</td>\n",
       "      <td>0.79208</td>\n",
       "      <td>0.91089</td>\n",
       "      <td>0.811880</td>\n",
       "      <td>0.98020</td>\n",
       "      <td>0.041</td>\n",
       "      <td>0.808</td>\n",
       "      <td>0.0005</td>\n",
       "      <td>71</td>\n",
       "      <td>4860</td>\n",
       "      <td>0.69307</td>\n",
       "      <td>0.60396</td>\n",
       "      <td>high</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Country  FrxnPeaceIn10  ODA4H2OPcptaDol  RenewResm3PcptaYr  \\\n",
       "0  Afghanistan            0.1             0.16               2986   \n",
       "1      Albania            1.0             5.58              13306   \n",
       "2      Algeria            0.0             0.33                473   \n",
       "\n",
       "   SustAccImprWatRur  SustAccImprWatUrb  SustAccImprSanRur  SustAccImprSanUrb  \\\n",
       "0            0.10891            0.18812           0.049505            0.15842   \n",
       "1            0.94059            0.98020           0.801980            0.98020   \n",
       "2            0.79208            0.91089           0.811880            0.98020   \n",
       "\n",
       "   TotHlthExpPctofGDP  GenGovtPctofTotHlthExp  ExtResHlthPctTotExpHlth  \\\n",
       "0               0.065                   0.395                   0.4560   \n",
       "1               0.065                   0.417                   0.0340   \n",
       "2               0.041                   0.808                   0.0005   \n",
       "\n",
       "   PCptaGovtExpHlthAvgExcRt  GDPPCptaIntDol  AdultLtrcyRate  FemaleLtrcyRate  \\\n",
       "0                         4             430         0.35644          0.20792   \n",
       "1                        49            6158         0.85644          0.78713   \n",
       "2                        71            4860         0.69307          0.60396   \n",
       "\n",
       "  BurdenOfDisease  \n",
       "0           awful  \n",
       "1             low  \n",
       "2            high  "
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data=pd.read_csv(\"Burden of diarrheal illness by country.csv\")\n",
    "data.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Country', 'FrxnPeaceIn10', 'ODA4H2OPcptaDol', 'RenewResm3PcptaYr',\n",
       "       'SustAccImprWatRur', 'SustAccImprWatUrb', 'SustAccImprSanRur',\n",
       "       'SustAccImprSanUrb', 'TotHlthExpPctofGDP', 'GenGovtPctofTotHlthExp',\n",
       "       'ExtResHlthPctTotExpHlth', 'PCptaGovtExpHlthAvgExcRt', 'GDPPCptaIntDol',\n",
       "       'AdultLtrcyRate', 'FemaleLtrcyRate', 'BurdenOfDisease'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data dictionary\n",
    "\n",
    "NAME: Burden of diarrheal illness by country\n",
    "\n",
    "SIZE: 130 Countries, 16 Variables\n",
    "\n",
    "VARIABLE DESCRIPTIONS:\n",
    "\n",
    "Country: Country name\n",
    "\n",
    "FrxnPeaceIn10: Fraction of the past ten years in which a country has been at peace \n",
    "\n",
    "ODA4H2OPcptaDol: Per Capita Official Developmental Assistance for water projects\n",
    "\n",
    "RenewResm3PcptaYr: Renewable Water Resources in cubic meters per capita per year\n",
    "\n",
    "SustAccImprWatRur: Fraction of rural population with sustainable access to improved water\n",
    "\n",
    "SustAccImprWatUrb: Fraction of urban population with sustainable access to improved water\n",
    "\n",
    "SustAccImprSanRur: Fraction of rural population with sustainable access to improved sanitation\n",
    "\n",
    "SustAccImprSanUrb: Fraction of urban population with sustainable access to improved sanitation\n",
    "\n",
    "TotHlthExpPctofGDP: Fraction of a country's GDP devoted to health spending\n",
    "\n",
    "GenGovtPctofTotHlthExp: The fraction of total health expenditures for a country which is provided by the government\n",
    "\n",
    "ExtResHlthPctTotExpHlth: The fraction of total health expenditures for a country which is comes from sources external to the country\n",
    "\n",
    "PCptaGovtExpHlthAvgExcRt: Per Capita Government Health Expenditures at the average exchange rate\n",
    "\n",
    "GDPPCptaIntDol: Gross Domestic Product per capita in international dollars\n",
    "\n",
    "AdultLtrcyRate: Adult Literacy rate\n",
    "\n",
    "FemaleLtrcyRate: Female Literacy rate\n",
    "\n",
    "BurdenOfDisease: Our target variable for classification.  The burden of disease due to diarrheal illness, categorized into \"low\", \"medium\", \"high\", and \"awful\" quartiles.  For each country, we have estimates of the number of Disability-Adjusted Life Years lost per 1000 persons per year (DALYs) due to diarrheal illness.  Countries with \"low\" burden of disease have up to 2.75345 DALYs; countries with \"medium\" burden of disease have between 2.75345 and 8.2127 DALYs; countries with \"high\" burden of disease have between 8.2127 and 26.699 DALYs; and countries with \"awful\" burden of diease have more than 26.699 DALYs."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Your goal is to train a decision tree classifier for the attribute “BurdenOfDisease\" using all other variables (except country name) as features with sklearn.tree.DecisionTreeClassifier. \n",
    "http://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "a) Please choose a train/test split and choose a hyper-parameter governing model simplicity, for example, the maximum tree depth or maximum number of leaf nodes. Then, fit your decision tree classifier (using the training set) for different values of this parameter and for each such value, record the corresponding classification accuracy on the test set. (10 pts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "import matplotlib.pylab as plt\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{2: 0.48717948717948717,\n",
       " 27: 0.6923076923076923,\n",
       " 52: 0.6666666666666666,\n",
       " 77: 0.6666666666666666,\n",
       " 102: 0.6410256410256411,\n",
       " 127: 0.6666666666666666,\n",
       " 152: 0.6153846153846154,\n",
       " 177: 0.6923076923076923,\n",
       " 202: 0.6666666666666666,\n",
       " 227: 0.6666666666666666,\n",
       " 252: 0.6410256410256411,\n",
       " 277: 0.6666666666666666,\n",
       " 302: 0.6666666666666666,\n",
       " 327: 0.6666666666666666,\n",
       " 352: 0.6666666666666666,\n",
       " 377: 0.6923076923076923,\n",
       " 402: 0.6410256410256411,\n",
       " 427: 0.6666666666666666,\n",
       " 452: 0.6666666666666666,\n",
       " 477: 0.6923076923076923}"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y = data.loc[:,'BurdenOfDisease']\n",
    "X = data.loc[:, 'FrxnPeaceIn10':'FemaleLtrcyRate']\n",
    "X = pd.get_dummies(X)\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state=100)\n",
    "\n",
    "accuracy = {}\n",
    "for i in range (2,500,25):\n",
    "    dt = DecisionTreeClassifier(max_leaf_nodes=i)\n",
    "    dt.fit(X_train, y_train)\n",
    "    accuracy[i] = dt.score(X_test, y_test)\n",
    "accuracy"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "b) Make a plot of accuracy vs. simplicity for different values of the hyper-parameter chosen in part a). That is, the x-axis should be hyper-parameter value (e.g. tree depth) and the y-axis should be accuracy. (10 pts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5,1,'Prediction accuracy Vesus number of max leaf notes')"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize=(8,8))\n",
    "plt.plot(accuracy.keys(), accuracy.values())\n",
    "plt.xlabel('number of leaf nodes')\n",
    "plt.ylabel('accuracy')\n",
    "plt.title('Prediction accuracy Vesus number of max leaf notes')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "c) Tune the hyper-parameter you choose in part a) by cross-validation using the training data. You can choose to use the GridSearchCV package from sklearn or write your own code to do cross-validation by spliting the training data into training and validation data. What is the out of sample accuracy after tuning the hyper-parameter? (10 pts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The mean out of sample accuracy after tuning the hyper-parameter is 0.587179\n"
     ]
    }
   ],
   "source": [
    "param_grid = {'max_leaf_nodes':range(2,500)}\n",
    "os_dt = []\n",
    "for i in range(10):\n",
    "    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = i)\n",
    "    dt = DecisionTreeClassifier()\n",
    "    gr = GridSearchCV(dt, param_grid=param_grid) \n",
    "    rs = gr.fit(X_train, y_train)\n",
    "    os_dt.append(rs.score(X_test, y_test))\n",
    "print('The mean out of sample accuracy after tuning the hyper-parameter is %f'%np.mean(os_dt))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "d) Visualize a simple decision tree (e.g., with max_depth = 2 or 3) learned from the data.  To do so, given your decision tree dt, you can use the code below, then copy and paste the resulting output into http://www.webgraphviz.com.  Alternatively, if you have graphviz installed on your machine, you can use that. (5 pts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "digraph Tree {\n",
      "node [shape=box, style=\"filled, rounded\", color=\"black\", fontname=helvetica] ;\n",
      "edge [fontname=helvetica] ;\n",
      "0 [label=\"GDPPCptaIntDol <= 3059.5, samples = 78, value = [16, 22, 18, 22], class = high\", fillcolor=\"#47e53900\"] ;\n",
      "1 [label=\"GDPPCptaIntDol <= 1092.5, samples = 32, value = [15, 16, 0, 1], class = high\", fillcolor=\"#47e5390f\"] ;\n",
      "0 -> 1 [labeldistance=2.5, labelangle=45, headlabel=\"True\"] ;\n",
      "2 [label=\"samples = 9, value = [9, 0, 0, 0], class = awful\", fillcolor=\"#e58139ff\"] ;\n",
      "1 -> 2 ;\n",
      "3 [label=\"SustAccImprSanRur <= 0.144, samples = 23, value = [6, 16, 0, 1], class = high\", fillcolor=\"#47e53996\"] ;\n",
      "1 -> 3 ;\n",
      "4 [label=\"samples = 6, value = [5, 1, 0, 0], class = awful\", fillcolor=\"#e58139cc\"] ;\n",
      "3 -> 4 ;\n",
      "5 [label=\"samples = 17, value = [1, 15, 0, 1], class = high\", fillcolor=\"#47e539df\"] ;\n",
      "3 -> 5 ;\n",
      "6 [label=\"GDPPCptaIntDol <= 8661.0, samples = 46, value = [1, 6, 18, 21], class = medium\", fillcolor=\"#d739e51b\"] ;\n",
      "0 -> 6 [labeldistance=2.5, labelangle=-45, headlabel=\"False\"] ;\n",
      "7 [label=\"SustAccImprSanUrb <= 0.936, samples = 34, value = [0, 6, 7, 21], class = medium\", fillcolor=\"#d739e584\"] ;\n",
      "6 -> 7 ;\n",
      "8 [label=\"samples = 23, value = [0, 4, 1, 18], class = medium\", fillcolor=\"#d739e5bc\"] ;\n",
      "7 -> 8 ;\n",
      "9 [label=\"samples = 11, value = [0, 2, 6, 3], class = low\", fillcolor=\"#399de560\"] ;\n",
      "7 -> 9 ;\n",
      "10 [label=\"SustAccImprSanUrb <= 0.723, samples = 12, value = [1, 0, 11, 0], class = low\", fillcolor=\"#399de5e8\"] ;\n",
      "6 -> 10 ;\n",
      "11 [label=\"samples = 1, value = [1, 0, 0, 0], class = awful\", fillcolor=\"#e58139ff\"] ;\n",
      "10 -> 11 ;\n",
      "12 [label=\"samples = 11, value = [0, 0, 11, 0], class = low\", fillcolor=\"#399de5ff\"] ;\n",
      "10 -> 12 ;\n",
      "}\n"
     ]
    }
   ],
   "source": [
    "from sklearn import tree\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 100)\n",
    "dt = DecisionTreeClassifier(max_depth = 3)\n",
    "dt.fit(X_train, y_train)\n",
    "\n",
    "thestring=tree.export_graphviz(dt,out_file=None,\n",
    "                         feature_names=X_train.columns.values,  \n",
    "                         class_names=dt.classes_,  \n",
    "                         filled=True, rounded=True,  \n",
    "                         special_characters=True,impurity=False).replace(\"<br/>\",\", \").replace(\"&le;\",\"<=\").replace(\"=<\",\"=\\\"\").replace(\">,\",\"\\\",\")\n",
    "print (thestring)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "thestring = tree.export_graphviz(dt, out_file=None,  \n",
    "                         feature_names=X_train.columns.values, \n",
    "                         class_names=['low', 'medium', 'high', 'awful'],  \n",
    "                         filled=True, rounded=True,  \n",
    "                         special_characters=True,impurity=False)\n",
    "\n",
    "graph = pydotplus.graph_from_dot_data(thestring)  \n",
    "Image(graph.create_png())  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 4, Fit a random forest to the data from question 3 (20 pts)\n",
    "\n",
    "a) Please use the same test/train split from previous question and feel free to tune the hyper-parameters for Random Forest model using training data. The package from sklearn is here: http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html.\n",
    "Then please report your out of sample prediction result and compare this model's performance with 3c). (10 pts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.model_selection import GridSearchCV"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### test the complexity of the tree:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{1: 0.5641025641025641, 6: 0.6666666666666666, 11: 0.717948717948718, 16: 0.6666666666666666, 21: 0.717948717948718, 26: 0.6923076923076923, 31: 0.6410256410256411, 36: 0.717948717948718, 41: 0.6923076923076923, 46: 0.6666666666666666}\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Text(0.5,1,'Prediction accuracy Vesus number of n_estimators')"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "y = data.loc[:,'BurdenOfDisease']\n",
    "X = data.loc[:, 'FrxnPeaceIn10':'FemaleLtrcyRate']\n",
    "X = pd.get_dummies(X)\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state=100)\n",
    "accuracy2 = {}\n",
    "for i in range(1,51,5):\n",
    "    rf = RandomForestClassifier(n_estimators=i)\n",
    "    rf.fit(X_train, y_train)\n",
    "    accuracy2[i] = rf.score(X_test, y_test)\n",
    "print(accuracy2)\n",
    "\n",
    "fig = plt.figure(figsize=(8,8))\n",
    "plt.plot(accuracy2.keys(), accuracy2.values())\n",
    "plt.xlabel('n_estimators')\n",
    "plt.ylabel('accuracy')\n",
    "plt.title('Prediction accuracy Vesus number of n_estimators')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### optimize the hyperparameter with cross-validation:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The mean out of sample accuracy using RF after tuning the hyper-parameter is 0.682051\n"
     ]
    }
   ],
   "source": [
    "param_grid = {'n_estimators':range(1,51)}\n",
    "os_rf = []\n",
    "for i in range(10):\n",
    "    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state=i)\n",
    "    rf = RandomForestClassifier()\n",
    "    gr = GridSearchCV(rf, param_grid=param_grid)\n",
    "    rs = gr.fit(X_train, y_train)\n",
    "    os_rf.append(rs.score(X_test, y_test))\n",
    "print('The mean out of sample accuracy using RF after tuning the hyper-parameter is %f'%np.mean(os_rf))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "b) Write one paragraph comparing the results from those two models (Random Forest vs Decision Tree) in terms of both accuracy and interpretability. (10 pts)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A decision tree is built on an entire dataset, using all the features/variables of interest, whereas a random forest randomly selects observations/rows and specific features/variables to build multiple decision trees from and then averages the results. Since the accuracy keeps improving with more and more splits, random forest indicates higher accuracy then decision tree. As the results shown above, the out-sample accuracy form Randon Forest is 0.682 while that from decision tree is 0.587. However, although we can specify the number of trees we want in Random forest(n_estimators) and also specify max number of features to be used in each tree, we cannot control the randomness, which feature is part of which tree in the forest, or which data point is part of which tree. Therefore, random forest is like a black box that has lower interpretability than decision tree. Decision tree can be faster to train, easily to be interpreted and select variable, and robust on smaller datasets. The example of specific tree from decision tree is like Q3 shows.  \n"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "celltoolbar": "Raw Cell Format",
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
